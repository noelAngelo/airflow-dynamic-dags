from airflow.decorators import dag
from airflow.operators.empty import EmptyOperator
from airflow.hooks.base import BaseHook
from airflow.notifications.basenotifier import BaseNotifier, Context
from pendulum import datetime
import requests
import json

# Notification config - MS Teams
MSTEAMS_CONN_ID = "msteams_default"


class MSTeamsWebhookHook(BaseHook):
    """
    Airflow Hook for sending messages to a Microsoft Teams channel using a webhook.
    """

    def __init__(self, teams_conn_id='msteams_default'):
        super().__init__()
        self.teams_conn_id = teams_conn_id
        self.conn = self.get_connection(self.teams_conn_id)
        self.webhook_url = self.conn.host

    def send_task_status(self,
                         task_name: str,
                         parent_dag: str,
                         status: str,
                         run_type: str,
                         duration):
        payload = {
            "type": "message",
            "attachments": [
                {
                    "contentType": "application/vnd.microsoft.card.adaptive",
                    "contentUrl": None,
                    "content": {
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "type": "AdaptiveCard",
    "version": "1.5",
    "body": [
        {
            "type": "ColumnSet",
            "columns": [
                {
                    "type": "Column",
                    "width": "stretch",
                    "items": [
                        {
                            "type": "TextBlock",
                            "text": "Airflow Run Summary",
                            "wrap": true,
                            "style": "heading",
                            "horizontalAlignment": "left"
                        }
                    ]
                },
                {
                    "type": "Column",
                    "width": "auto",
                    "items": [
                        {
                            "type": "Image",
                            "url": "https://airflow.apache.org/docs/apache-airflow/1.10.6/_images/pin_large.png",
                            "horizontalAlignment": "right",
                            "size": "small"
                        }
                    ],
                    "horizontalAlignment": "Left",
                    "verticalContentAlignment": "Center",
                    "rtl": false
                }
            ]
        },
        {
            "type": "TextBlock",
            "text": "elt_bronze_acs_workflow",
            "wrap": true,
            "color": "Dark",
            "weight": "Bolder",
            "size": "Small",
            "fontType": "Monospace",
            "horizontalAlignment": "Center"
        },
        {
            "type": "TextBlock",
            "text": "Triggered on {{DATE(2017-02-14T06:00:00Z, SHORT)}}",
            "isSubtle": true,
            "wrap": true
        },
        {
            "type": "TextBlock",
            "text": "{{TIME(2017-02-14T06:00:00Z)}} - {{TIME(2017-02-14T06:00:00Z)}}",
            "isSubtle": true,
            "spacing": "None",
            "wrap": true
        },
        {
            "type": "TextBlock",
            "text": "Success",
            "wrap": true,
            "color": "Good",
            "weight": "Bolder"
        }
    ],
    "actions": [
        {
            "type": "Action.OpenUrl",
            "title": "View DAG run",
            "url": "https://google.com"
        }
    ]
}

                }
            ]
        }
        headers = {"content-type": "application/json"}
        response = requests.post(self.webhook_url, json=payload, headers=headers)

        if response.status_code == 200:
            return "Message sent successfully to Microsoft Teams."
        else:
            response.raise_for_status()


class TeamsNotifier(BaseNotifier):

    def __init__(self, *, teams_conn_id: str = MSTEAMS_CONN_ID, status: str):
        super().__init__()
        self.teams_conn_id = teams_conn_id
        self.status = status

    def hook(self) -> MSTeamsWebhookHook:
        """MS Teams Webhook"""
        return MSTeamsWebhookHook(teams_conn_id=self.teams_conn_id)

    def notify(self, context: Context) -> None:
        dag_run = context['dag_run']
        task = context['task']
        task_instance = context['task_instance']
        task_key = context['task_instance_key_str']
        hook = self.hook()
        hook.send_task_status(
            task_name=task.task_id,
            parent_dag=dag_run.dag_id,
            status=self.status,
            duration=task_instance.duration,
            run_type=dag_run.run_type)


default_args = {
    'owner': 'airflow',
    'start_date': datetime(2023, 1, 1),
    'retries': 1,
}


@dag(default_args=default_args, catchup=False)
def example_dag():

    t1 = EmptyOperator(task_id='t1')
    t2 = EmptyOperator(task_id='t2',
                       on_success_callback=[TeamsNotifier(status='SUCCESS')],
                       on_failure_callback=[])

    t1 >> t2


example_dag()
